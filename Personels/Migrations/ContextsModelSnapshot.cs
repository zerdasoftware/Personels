// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Personels.Models;

namespace Personels.Migrations
{
    [DbContext(typeof(Contexts))]
    partial class ContextsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Personels.Models.Birim", b =>
                {
                    b.Property<int>("BirimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BirimAdı")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BirimId");

                    b.ToTable("Birims");
                });

            modelBuilder.Entity("Personels.Models.Departmanlar", b =>
                {
                    b.Property<int>("DepartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DepartAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartKodu")
                        .HasColumnType("int");

                    b.HasKey("DepartId");

                    b.ToTable("Departmanlars");
                });

            modelBuilder.Entity("Personels.Models.Isim", b =>
                {
                    b.Property<int>("IsimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("IsimAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsimKodu")
                        .HasColumnType("int");

                    b.HasKey("IsimId");

                    b.ToTable("Isims");
                });

            modelBuilder.Entity("Personels.Models.Kodlar", b =>
                {
                    b.Property<int>("KodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmanlarDepartId")
                        .HasColumnType("int");

                    b.Property<int>("IsimId")
                        .HasColumnType("int");

                    b.Property<string>("KodAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetrajId")
                        .HasColumnType("int");

                    b.Property<int>("OlcuId")
                        .HasColumnType("int");

                    b.Property<int>("RenkId")
                        .HasColumnType("int");

                    b.Property<int>("SeriId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("KodId");

                    b.HasIndex("DepartmanlarDepartId");

                    b.HasIndex("IsimId");

                    b.HasIndex("MetrajId");

                    b.HasIndex("OlcuId");

                    b.HasIndex("RenkId");

                    b.HasIndex("SeriId");

                    b.HasIndex("UrunId");

                    b.ToTable("Kodlars");
                });

            modelBuilder.Entity("Personels.Models.Metraj", b =>
                {
                    b.Property<int>("MetrajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("MetrajAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetrajKodu")
                        .HasColumnType("int");

                    b.HasKey("MetrajId");

                    b.ToTable("Metrajs");
                });

            modelBuilder.Entity("Personels.Models.Olcu", b =>
                {
                    b.Property<int>("OlcuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("OlcuAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlcuKodu")
                        .HasColumnType("int");

                    b.HasKey("OlcuId");

                    b.ToTable("Olcus");
                });

            modelBuilder.Entity("Personels.Models.Personel", b =>
                {
                    b.Property<int>("PersonelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BirimID")
                        .HasColumnType("int");

                    b.Property<string>("Sehir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonelID");

                    b.HasIndex("BirimID");

                    b.ToTable("Personels");
                });

            modelBuilder.Entity("Personels.Models.Renk", b =>
                {
                    b.Property<int>("RenkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RenkAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RenkKodu")
                        .HasColumnType("int");

                    b.HasKey("RenkId");

                    b.ToTable("Renks");
                });

            modelBuilder.Entity("Personels.Models.Seri", b =>
                {
                    b.Property<int>("SeriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("SeriAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriKodu")
                        .HasColumnType("int");

                    b.HasKey("SeriId");

                    b.ToTable("Seris");
                });

            modelBuilder.Entity("Personels.Models.Urun", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("UrunAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UrunKodu")
                        .HasColumnType("int");

                    b.HasKey("UrunId");

                    b.ToTable("Urun");
                });

            modelBuilder.Entity("Personels.Models.Kodlar", b =>
                {
                    b.HasOne("Personels.Models.Departmanlar", "Departmanlar")
                        .WithMany()
                        .HasForeignKey("DepartmanlarDepartId");

                    b.HasOne("Personels.Models.Isim", "Isim")
                        .WithMany()
                        .HasForeignKey("IsimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Personels.Models.Metraj", "Metraj")
                        .WithMany()
                        .HasForeignKey("MetrajId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Personels.Models.Olcu", "Olcu")
                        .WithMany()
                        .HasForeignKey("OlcuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Personels.Models.Renk", "Renk")
                        .WithMany()
                        .HasForeignKey("RenkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Personels.Models.Seri", "Seri")
                        .WithMany()
                        .HasForeignKey("SeriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Personels.Models.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departmanlar");

                    b.Navigation("Isim");

                    b.Navigation("Metraj");

                    b.Navigation("Olcu");

                    b.Navigation("Renk");

                    b.Navigation("Seri");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Personels.Models.Personel", b =>
                {
                    b.HasOne("Personels.Models.Birim", "Birim")
                        .WithMany("Personels")
                        .HasForeignKey("BirimID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");
                });

            modelBuilder.Entity("Personels.Models.Birim", b =>
                {
                    b.Navigation("Personels");
                });
#pragma warning restore 612, 618
        }
    }
}
